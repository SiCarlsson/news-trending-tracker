services:
  terraform:
    image: hashicorp/terraform:1.5
    container_name: terraform
    working_dir: /terraform
    volumes:
      - ./terraform:/terraform
      - ./credentials:/credentials
    entrypoint: ["sh", "-c"]
    command: >
      "
        echo 'Initializing BigQuery tables...' &&
        terraform init &&
        terraform plan &&
        terraform apply -auto-approve &&
        echo 'BigQuery tables created successfully!'
      "
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      # UTF-8 encoding support
      KAFKA_OPTS: "-Dfile.encoding=UTF-8"
      LANG: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # UTF-8 encoding support
      KAFKA_OPTS: "-Dfile.encoding=UTF-8"
      LANG: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    restart: unless-stopped

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: ["sh", "-c"]
    command: >
      "
        echo 'Kafka is ready! Creating topics...' &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --topic news-websites &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --topic news-articles &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --topic news-words &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --topic news-occurrences &&
        echo 'All Kafka topics created successfully!' &&
        kafka-topics --list --bootstrap-server kafka:29092
      "
    restart: on-failure

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
      - kafka-init
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      # UTF-8 encoding support
      JAVA_OPTS: "-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8"
      LANG: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    restart: unless-stopped

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
    ports:
      - "8081:8080"
      - "7077:7077"
    restart: unless-stopped

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
    depends_on:
      - spark-master
      - kafka
      - kafka-init
    ports:
      - "8082:8082"
    restart: unless-stopped